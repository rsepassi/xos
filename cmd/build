#!/bin/sh
set -e

pkg=$1
if [ -z "$pkg" ]
then
  echo "must provide package"
  exit 1
fi
EXTRA_ARGS="$@"

BUILD_ROOT=${BUILD_ROOT:-$PWD}
BUILD_CACHE=$BUILD_ROOT/build/cache
ARCH_HOST=$(zig env | grep target | cut -d '"' -f4)
ARCH=${ARCH:-$ARCH_HOST}
OPT=${OPT:-s}

pkgdir=$BUILD_ROOT/pkg/$pkg

# identify output directory
pkgid=$(\
  BUILD_ROOT=$BUILD_ROOT \
  ARCH=$ARCH \
  OPT=$OPT \
  ALL_ARGS="$EXTRA_ARGS" \
  $BUILD_ROOT/tools/pkgid $pkg \
)
build_out=$BUILD_CACHE/$pkgid

# symlink tools
tools_dir=$BUILD_ROOT/build/tools
if [ ! -e $tools_dir/.ok ]
then
  # symlink tools
  tools="
  mkdir
  ls
  rm
  mv
  cp
  ln
  mktemp
  dirname
  tar
  gzip
  unzip
  wget
  sha256sum
  shasum
  cat
  cut
  grep
  head
  tail
  which
  env
  zig
  touch
  find
  "
  $BUILD_ROOT/tools/link_tools $tools_dir "$tools"
fi

# build
if [ ! -e $build_out/.ok ]
then
  BUILD_DEPS=""
  if [ -e $pkgdir/deps.txt ]
  then
    BUILD_DEPS=$(mktemp -d)
    BUILD_ROOT=$BUILD_ROOT \
    BUILD_CACHE=$BUILD_CACHE \
      $BUILD_ROOT/tools/need \
      "$(cat $pkgdir/deps.txt)" \
      $BUILD_DEPS
  fi

  rm -rf $build_out
  mkdir -p $build_out
  env -i \
    PATH="$tools_dir:$BUILD_ROOT/tools" \
    XDG_CACHE_HOME=$BUILD_CACHE/xdg \
    ARCH=$ARCH \
    ARCH_HOST=$ARCH_HOST \
    OPT=$OPT \
    BUILD_ROOT=$BUILD_ROOT \
    BUILD_CACHE=$BUILD_CACHE \
    BUILD_DL=$BUILD_ROOT/build/dl \
    BUILD_OUT=$build_out \
    BUILD_DEPS=$BUILD_DEPS \
    BUILD_PKG=$pkgdir \
  /bin/sh $pkgdir/build.sh $EXTRA_ARGS
  touch $build_out/.ok
fi
echo $pkgid
