#!/usr/bin/env sh
set -e

# get xos/ root directory
get_buildroot() {
  containing_dir=$(dirname $0)
  if [ "$(basename $containing_dir)" = "cmd" ]
  then
    # called cmd/build
    dirname $containing_dir
  else
    # called build/tools/build
    dirname $(dirname $containing_dir)
  fi
}
BUILD_ROOT=$(realpath $(get_buildroot))
BUILD_CACHE=$BUILD_ROOT/build/cache

# process arguments
pkg=$1
ARGS="$@"
BUILD_PKG=$BUILD_ROOT/pkg/$pkg
if [ -z "$pkg" ]
then
  cat <<EOF
usage: ARCH= OPT= build pkgname

echoes pkgid on successful build
build artifacts for last successful build available in build/out/
EOF
  exit 1
fi
if [ ! -e $BUILD_PKG/build.sh ]
then
  echo "unrecognized pkg $pkg, missing build.sh"
  exit 1
fi

# seal PATH
tools_dir=$BUILD_ROOT/build/tools
BUILD_ROOT=$BUILD_ROOT \
BUILD_CACHE=$BUILD_CACHE \
  $BUILD_ROOT/tools/link_tools $tools_dir
export PATH="$tools_dir"

# Host and target ARCH
ARCH_HOST=$(zig targets | grep "\"triple\"" | cut -d '"' -f4)
ARCH=${ARCH:-$ARCH_HOST}
ARCH_HOST_ISA=$(echo $ARCH_HOST | cut -d '-' -f1)
ARCH_HOST_OS=$(echo $ARCH_HOST | cut -d '-' -f2 | cut -d '.' -f1)
ARCH_ISA=$(echo $ARCH | cut -d '-' -f1)
ARCH_OS=$(echo $ARCH | cut -d '-' -f2 | cut -d '.' -f1)

# Optimizaton
OPT=${OPT:-s}

# identify output hash
pkgid_text=$(
  BUILD_ROOT=$BUILD_ROOT \
  BUILD_PKG=$BUILD_PKG \
  ARCH=$ARCH \
  OPT=$OPT \
  ARGS="$ARGS" \
  $BUILD_ROOT/tools/pkgid $pkg
)
pkgid=$(echo $pkgid_text | sha256sum | cut -d ' ' -f1)
BUILD_OUT=$BUILD_CACHE/$pkgid

# build if necessary
if [ ! -e $BUILD_OUT/.ok ]
then
  rm -rf $BUILD_OUT
  mkdir -p $BUILD_OUT/out $BUILD_OUT/tmp
  echo "$pkgid_text" > $BUILD_OUT/pkgid

  # build deps
  BUILD_DEPS=$BUILD_OUT/deps
  if [ -e $BUILD_PKG/deps.txt ]
  then
    mkdir -p $BUILD_DEPS
    cp $BUILD_PKG/deps.txt $BUILD_OUT
    BUILD_DEPS=$BUILD_DEPS \
    BUILD_CACHE=$BUILD_CACHE \
      $BUILD_ROOT/tools/need \
      "$(cat $BUILD_PKG/deps.txt)"
  fi

  # pkg-specific tools
  pkg_tools_dir=$BUILD_OUT/tools
  mkdir -p $pkg_tools_dir
  cat <<EOF > $pkg_tools_dir/mktemp
#!/usr/bin/env sh
set -e
internal_mktemp \$@ $BUILD_OUT/tmp/tmpXXXXXX
EOF
  chmod +x $pkg_tools_dir/mktemp

  # run build script
  logfile=$BUILD_OUT/build.log
  fail() {
    cat $logfile
    echo ""
    echo "error building pkg $pkg $pkgid"
    exit 1
  }
  env -i \
    PATH="$pkg_tools_dir:$PATH" \
    XDG_CACHE_HOME=$BUILD_ROOT/build/xdgcache \
    ARCH=$ARCH \
    ARCH_ISA=$ARCH_ISA \
    ARCH_OS=$ARCH_OS \
    ARCH_HOST=$ARCH_HOST \
    OPT=$OPT \
    BUILD_CACHE=$BUILD_CACHE \
    BUILD_DL=$BUILD_ROOT/build/dl \
    BUILD_OUT=$BUILD_OUT/out \
    BUILD_DEPS=$BUILD_DEPS \
    BUILD_PKG=$BUILD_PKG \
  sh $BUILD_PKG/build.sh $ARGS > $logfile || fail

  # ok
  touch $BUILD_OUT/.ok
fi

# link to build/out
rm -f $BUILD_ROOT/build/out
ln -s $BUILD_OUT/out $BUILD_ROOT/build/out

# echo id
echo $pkgid
