#!/usr/bin/env sh

depsdir=${PC_DEPS_DIR:-$BUILD_DEPS}
include_libs=0
include_cflags=0

gen_pkg_config() {
  lib=$1
  shift
  while [ "$#" -gt 0 ]
  do
    case "$1" in
      --deps)
        shift
        deps=$1
        shift
        requires=""
        IFS=","
        for dep in $deps
        do
          requires="$requires $dep"
        done
        ;;
      --cflags)
        shift
        cflags=$1
        shift
        ;;
      --*)
        >&2 echo "unrecognized flag $1"
        exit 1
        ;;
      *)
        >&2 echo "unrecognized arg $1"
        exit 1
        ;;
    esac
  done

  mkdir -p "$BUILD_OUT/pkgconfig"
  cat <<EOF > $BUILD_OUT/pkgconfig/$lib.pc
Cflags: -I\${rootdir}/include $cflags
Libs: \${rootdir}/lib/$(zigi lib $lib)
Requires:$requires
EOF
}

while [ "$#" -gt 0 ]
do
  case "$1" in
  --libs)
    include_libs=1
    ;;
  --cflags)
    include_cflags=1
    ;;
  --gendefault)
    shift
    gen_pkg_config "$@"
    exit 0
    ;;
  --*)
    >&2 echo "unrecognized flag $1"
    exit 1
    ;;
  *)
    pkgs="$@"
    break
    ;;
  esac
  shift
done

for pkg in $pkgs
do
  lib=$(echo "$pkg/" | cut -d'/' -f2)
  if [ -z "$lib" ]
  then
    lib=$pkg
  else
    pkg=$(echo "$pkg/" | cut -d'/' -f1)
  fi

  pc="$depsdir/$pkg/pkgconfig/$lib.pc"
  if [ ! -f "$pc" ]
  then
    >&2 echo "pkg-config: pc file does not exist at $pc"
    exit 1
  fi

  rootdir="$depsdir/$pkg"
  while IFS= read -r line; do
    case $line in
      "Cflags:"*)
        [ "$include_cflags" = 1 ] && eval "echo ${line#Cflags:}"
        ;;
      "Libs:"*)
        [ "$include_libs" = 1 ] && eval "echo ${line#Libs:}"
        ;;
      "Requires:"*)
        pc_flags=""
        [ "$include_cflags" = 1 ] && pc_flags="$pc_flags --cflags"
        [ "$include_libs" = 1 ] && pc_flags="$pc_flags --libs"
        reqs=${line#Requires:}
        for req in $reqs
        do
          PC_DEPS_DIR="$(realpath "$rootdir")/../deps" pkg-config $pc_flags $req
        done
        ;;
      *)
        # ignore
        ;;
    esac
  done < "$pc"
done
